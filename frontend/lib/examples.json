{
  "hello world": "// Hello World by ricel123 in ricelang 17/05/2025\n\nint main() {\n    putStringLn(\"Hello World\");\n    byebye 0;\n}\n",
  "mendelbrot": "// Mendlebrot in ricelang\n\nint MAX_DEPTH = 100;\nfloat LIMIT = 8.0;\nint WIDTH = 150;\nint HEIGHT = 50;\nfloat REAL_MIN = -2.5;\nfloat REAL_MAX = 1.0;\nfloat IMAG_MIN = -1.5;\nfloat IMAG_MAX = 1.5;\nint COLOUR_OFFSET = 2;\n\nint mod(int a, int b) {\n    byebye a - (a / b * b);\n}\n\nint mandelbrot(float real, float imag) {\n    float z_real = 0.0;\n    float z_imag = 0.0;\n    float z_real2 = 0.0;\n    float z_imag2 = 0.0;\n    int depth = 0;\n\n    while (depth < MAX_DEPTH && z_real2 + z_imag2 < LIMIT) {\n        z_imag = 2.0 * z_real * z_imag + imag;\n        z_real = z_real2 - z_imag2 + real;\n        z_real2 = z_real * z_real;\n        z_imag2 = z_imag * z_imag;\n        depth = depth + 1;\n    }\n\n    byebye depth;\n}\n\nint main() {\n    int x, y;\n    float real, imag;\n    int depth;\n\n    for (y = 0; y < HEIGHT; y = y + 1) {\n        for (x = 0; x < WIDTH; x = x + 1) {\n            real = REAL_MIN + (REAL_MAX - REAL_MIN) * x / WIDTH;\n            imag = IMAG_MIN + (IMAG_MAX - IMAG_MIN) * y / HEIGHT;\n            depth = mandelbrot(real, imag);\n            if (depth == MAX_DEPTH) {\n                putString(\"#\");\n            } else {\n                putString(\" \");\n            }\n        }\n        putLn();\n    }\n}\n",
  "boxes": "// Boxes in ricelang\nint mod(int a, int b) {\n    byebye a - a / b * b;\n}\n\nint main() {\n    int n;\n    int size;\n    int row;\n    int col;\n\n    n = 10;\n\n    size = 4 * n - 1;\n\n    for (row = 0; row < size; row = row + 1) {\n        for (col = 0; col < size; col = col + 1) {\n            if ((mod(row, 2) == 0) && ((mod(col, 2) == 0) || row < col && row < size - col || row >= col && row >= size - col) ||\n                (mod(col, 2) == 0) && (col < row && col < size - row || col >= row && col >= size - row)) {\n                putString(\"*\");\n            } else {\n                putString(\"-\");\n            }\n        }\n        putLn();\n    }\n\n    byebye 0;\n}\n",
  "bubble": "/* bubble.ricelang -- Read an integer array, print it, then sort it and\n * print it. Use the bubble sort method.\n*/\n\nvoid printIntArray(int a[], int n)\n/* n is the number of elements in the array a.\n * These values are printed out, five per line.\n*/\n{\n    int i;\n\n    for (i=0; i<n; i=i+1) {\n        putInt(a[i]);\n        putString(\" \");\n    }\n    putLn();\n}\n\nvoid bubbleSort(int a[], int n)\n/* It sorts in non-decreasing order the first N positions of A. It uses\n * the bubble sort method.\n*/\n{\n    int lcv;\n    int limit = n-1;\n    int temp;\n    int lastChange;\n\n    while (limit != 0) {\n        lastChange = 0;\n        for (lcv=0;lcv<limit;lcv=lcv+1)\n            /* Notice that the values in positions LIMIT+1 .. N are in\n             * their final position, i.e. they are sorted right \n            */\n            if (a[lcv]>a[lcv+1]) {\n                temp = a[lcv];\n                a[lcv] = a[lcv+1];\n                a[lcv+1] = temp;\n                lastChange = lcv;\n            }\n            limit = lastChange;\n    }\n}\n\nint main() {\n    int x[10] = {3, 10, 1, 5, 8, 0, 20, 1, 4, 100};\n    int n = 10;\n\n    putStringLn(\"The array was:\");\n    printIntArray(x,n);\n\n    putLn();\n\n    bubbleSort(x,n);\n    putStringLn(\"The sorted array is:\");\n    printIntArray(x,n);\n\n}\n",
  "spiral": "// decimal spiral in ricelang\n\nint solve(int n, int x, int y) {\n    int k = (n - 1) * (n + 3) / 2;\n\n    if (y == 0) {\n        byebye k - x;\n    } else if (y == 1) {\n        if (x == n - 1) {\n            byebye k - x - 1;\n        }\n\n        byebye -1;\n    } else if (y == n - 2) {\n        if (x == 0) {\n            byebye k - 3 * (n - 1) - 1;\n        } else if (x == n - 1) {\n            byebye k - 2 * (n - 1) + 1;\n        }\n\n        byebye -1;\n    } else if (y == n - 1) {\n        byebye k - 3 * (n - 1) + x;\n    }\n\n    if (x == 0) {\n        byebye k - 4 * (n - 1) + y;\n    } else if (x == 1) {\n        if (y == 2) {\n            byebye k - 4 * (n - 1) + y - 1;\n        }\n\n        byebye -1;\n    } else if (x == n - 1) {\n        byebye k - (n - 1) - y;\n    } else if (x == n - 2) {\n        byebye -1;\n    } else {\n        byebye solve(n - 4, x - 2, y - 2);\n    }\n\n    byebye -1;\n}\n\nint mod(int a, int b) {\n    byebye a - a / b * b;\n}\n\nint main() {\n    int n, k, y, x;\n    n = 13;\n\n    for (y = 0; y < n; y = y + 1) {\n        for (x = 0; x < n; x = x + 1) {\n            k = solve(n, x, y);\n            if (k == -1) {\n                putString(\"-\");\n            } else {\n                putInt(mod(k, 10));\n            }\n        }\n        putLn();\n    }\n}\n",
  "fibonacci": "// memoized fibonacci in ricelang\n\nint fibonacci(int n, int memo[]) {\n  if (n <= 1) byebye n;\n\n  if (memo[n] != 0) byebye memo[n];\n\n  memo[n] = fibonacci(n - 1, memo) + fibonacci(n - 2, memo);\n\n  byebye memo[n];\n}\n\nint main() {\n    int n = 25;\n    int memo[26]; // make sure memo size is n + 1\n    int i;\n\n    for (i = 0; i <= n; i = i + 1) {\n        memo[i] = 0;\n    }\n\n    fibonacci(n, memo);\n\n    for (i = 0; i <= n; i = i + 1) {\n        putString(\"fibonacci(\");\n        putInt(i);\n        putString(\") = \");\n        putIntLn(memo[i]);\n    }\n\n    byebye 0;\n}\n",
  "prime": "// isPrime in ricelang\n\nint mod(int a, int b) {\n    byebye a - (a / b * b);\n}\n\nboolean isPrime(int n) {\n    int i = 2;\n    if (n <= 1) byebye false;\n    while (i * i <= n) {\n        if (mod(n, i) == 0) byebye false;\n        i = i + 1;\n    }\n    byebye true;\n}\n\nint main() {\n    int num = 100000001; // funnily enough is divisble by 17\n    boolean result = isPrime(num);\n\n    putString(\"The number \");\n    putInt(num);\n    putString(\" is prime: \");\n    putBoolLn(result);\n\n    {\n        int i;\n        // all except 333333331 are prime for it is also divisble by 17\n        int nums[8] = {31, 331, 3331, 33331, 333331, 3333331, 33333331, 333333331};\n        for (i = 0; i < 8; i = i + 1) {\n            num = nums[i];\n            result = isPrime(num);\n\n            putString(\"The number \");\n            putInt(num);\n            putString(\" is prime: \");\n            putBoolLn(result);\n        }\n    }\n\n    byebye 0;\n}\n",
  "sine": "// sine wave in ricelang\n\nfloat PI = 3.1415926535;\n\nfloat sin(float x) {    \n    float x2 = x * x, x3 = x2 * x, x5 = x3 * x2, x7 = x5 * x2, x9 = x7 * x2, x11 = x9 * x2, x13 = x11 * x2;\n\n    byebye x - x3 / 6.0 + x5 / 120.0 - x7 / 5040.0 + x9 / 362880.0 - x11 / 39916800.0  + x13 / 6227020800.0;\n}\n\nint main() {\n    float amplitude = 24.0, wavelength = 30.0, x, y, offset;\n    int width = 60, i = 0, j;\n\n    while (i < width) {\n        x = i / wavelength * 2 * PI; \n\n        while (x > PI) {\n            x = x - PI * 2;\n        }\n\n        y = sin(x);\n\n        offset = y * amplitude + amplitude;\n         \n        j = 0;\n        while (j < offset) {\n            putString(\" \");\n            j = j + 1;\n        }\n\n        putIntLn(i);\n        i = i + 1;\n    }\n} \n"
}
