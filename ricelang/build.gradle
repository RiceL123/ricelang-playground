plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'ricelang'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation files("libs/jasmin.jar")
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('compile', JavaExec) {
	// usage: $./gradlew compile --args="-d 3 file.ricelang"
	group = 'ricelang'
	description = 'compiles a source file to a .j file'
	classpath = sourceSets.main.runtimeClasspath
	mainClass.set('ricelang.VC.vc')
	
}

tasks.register('jasmin', JavaExec) {
	// usage: $./gradlew jasmin --args="file.j"
    group = 'ricelang'
    description = 'compiles a .j file to a .class file'
    classpath = files('libs/jasmin.jar')
    mainClass.set('jasmin.Main')
}

tasks.register('runVC') {
	group = 'ricelang'
	description = 'Compiles and runs a source file via Jasmin and the JVM'

	doLast {
		if (!project.hasProperty('file')) {
			throw new Exception("Missing -Pfile=... argument")
		}

		def vcFile = project.property('file')
		def baseName = vcFile.replaceAll(/\.vc$/, '')
		def jFile = "${baseName}.j"
		def className = baseName.replaceAll('/', '.')

		javaexec {
			classpath = sourceSets.main.runtimeClasspath
			mainClass.set('ricelang.VC.vc')
			args = [vcFile]
		}

		javaexec {
			classpath = files('libs/jasmin.jar')
			mainClass.set('jasmin.Main')
			args = [jFile]
		}

		javaexec {
			classpath = files('.')  // assumes the .class file is in project root
			mainClass.set(className)
		}
	}
}
